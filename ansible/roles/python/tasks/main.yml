---
- name: Install packages necessary to build python
  apt:
    update_cache: yes
    state: present
    autoclean: yes
    autoremove: yes
    name: "{{ packages_for_python|list }}"
  become: yes

- name: Create directory for python configuration
  file:
    path: "{{ ansible_env.HOME }}/python"
    state: directory

- name: Install pyenv
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: "{{ ansible_env.HOME }}/python/pyenv"
    depth: 1

- name: Check if the required version of python is installed
  stat:
    path: "{{ ansible_env.HOME }}/python/pyenv/versions/{{ python_version }}"
  register: required_python

- name: Install required version of python using pyenv
  shell:  'pyenv install {{ python_version }}'
  environment:
    PYENV_ROOT: "{{ ansible_env.HOME }}/python/pyenv"
    PATH: "{{ ansible_env.HOME }}/python/pyenv/bin:{{ lookup('env','PATH') }}"
  args:
    creates: "{{ ansible_env.HOME }}/python/pyenv/versions/{{ python_version }}"
  when: not required_python.stat.exists

- name: Set global pyenv python version
  command:  "pyenv global {{ python_version }}"
  environment:
    PYENV_ROOT: "{{ ansible_env.HOME }}/python/pyenv"
    PATH: "{{ ansible_env.HOME }}/python/pyenv/bin:{{ lookup('env','PATH') }}"
  when: not required_python.stat.exists

- name: Add pyenv activation to bashrc
  blockinfile:
    block: |
      export PYENV_ROOT="$HOME/python/pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init --path)"
    path: "{{ ansible_env.HOME }}/.bashrc"
    insertafter: EOF
    marker: '#{mark} ANSIBLE MANAGED BLOCK PYTHON'
    state: present

- name: Install pip packages
  pip:
    name: "{{ pip_modules_to_install }}"
    executable: "{{ ansible_env.HOME }}/python/pyenv/shims/pip"

- name: Capture files to delete
  find:
    paths: "{{ ansible_env.HOME }}/python/pyenv/versions"
    file_type: directory
    excludes: "{{ python_version }}"
  register: old_python_versions

- name: Delete files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ old_python_versions['files'] }}"
